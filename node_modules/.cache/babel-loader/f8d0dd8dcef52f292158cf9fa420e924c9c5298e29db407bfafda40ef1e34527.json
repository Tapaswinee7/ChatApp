{"ast":null,"code":"var _jsxFileName = \"/Users/tapaswineesethy/Desktop/Tapaswinee/ChatApp/chat-app/src/chatApp/ChatList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./ChatList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatList = ({\n  chats,\n  onSelectChat\n}) => {\n  _s();\n  var _chatList$find;\n  const [filterText, setFilterText] = useState(\"\");\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [chatList, setChatList] = useState(chats);\n  const handleSelectChat = chatId => {\n    setSelectedChatId(chatId);\n    onSelectChat(chatId); // Pass the selected chat ID to the parent component\n  };\n  const handleSendMessage = () => {\n    if (message !== \"\") {\n      const updatedChats = chatList.map(chat => {\n        if (chat.id === selectedChatId) {\n          return {\n            ...chat,\n            messageList: [...chat.messageList, {\n              sender: \"USER\",\n              message\n            }]\n          };\n        }\n        return chat;\n      });\n      setChatList(updatedChats);\n      setMessage(\"\");\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n  const filteredChats = chatList.filter(chat => {\n    const titleMatch = chat.title.toLowerCase().includes(filterText.toLowerCase());\n    const orderIdMatch = chat.orderId.toLowerCase().includes(filterText.toLowerCase());\n    return titleMatch || orderIdMatch;\n  });\n  useEffect(() => {\n    set;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-pane\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Filter by Chat Title / Order ID\",\n        value: filterText,\n        onChange: e => setFilterText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chat-list\",\n        children: filteredChats.map(chat => {\n          const date = new Date(chat.latestMessageTimestamp);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `chat-item ${selectedChatId === chat.id ? \"selected\" : \"\"}`,\n            onClick: () => handleSelectChat(chat.id),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: chat.imageURL,\n                alt: chat.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat-title\",\n                  children: chat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"order-id\",\n                  children: [\"Order ID: \", chat.orderId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"last-message-date\",\n                  children: [\"Date: \", date.toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, chat.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-pane\",\n      children: selectedChatId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: [(_chatList$find = chatList.find(chat => chat.id === selectedChatId)) === null || _chatList$find === void 0 ? void 0 : _chatList$find.messageList.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === \"USER\" ? \"user-message\" : \"bot-message\"}`,\n          children: message.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatList, \"Y9bxlvblEaKHLWbQHflLOVxREM4=\");\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ChatList","chats","onSelectChat","_s","_chatList$find","filterText","setFilterText","selectedChatId","setSelectedChatId","message","setMessage","chatList","setChatList","handleSelectChat","chatId","handleSendMessage","updatedChats","map","chat","id","messageList","sender","handleKeyDown","e","key","filteredChats","filter","titleMatch","title","toLowerCase","includes","orderIdMatch","orderId","set","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","date","Date","latestMessageTimestamp","onClick","src","imageURL","alt","toLocaleDateString","find","index","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/tapaswineesethy/Desktop/Tapaswinee/ChatApp/chat-app/src/chatApp/ChatList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./ChatList.css\";\n\nconst ChatList = ({ chats, onSelectChat }) => {\n  const [filterText, setFilterText] = useState(\"\");\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [chatList, setChatList] = useState(chats);\n\n  const handleSelectChat = (chatId) => {\n    setSelectedChatId(chatId);\n    onSelectChat(chatId); // Pass the selected chat ID to the parent component\n  };\n\n  const handleSendMessage = () => {\n    if (message !== \"\") {\n      const updatedChats = chatList.map((chat) => {\n        if (chat.id === selectedChatId) {\n          return {\n            ...chat,\n            messageList: [...chat.messageList, { sender: \"USER\", message }],\n          };\n        }\n        return chat;\n      });\n      setChatList(updatedChats);\n      setMessage(\"\");\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n\n  const filteredChats = chatList.filter((chat) => {\n    const titleMatch = chat.title\n      .toLowerCase()\n      .includes(filterText.toLowerCase());\n    const orderIdMatch = chat.orderId\n      .toLowerCase()\n      .includes(filterText.toLowerCase());\n    return titleMatch || orderIdMatch;\n  });\n\n  useEffect(() => {\n    set\n  })\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"left-pane\">\n        <input\n          type=\"text\"\n          placeholder=\"Filter by Chat Title / Order ID\"\n          value={filterText}\n          onChange={(e) => setFilterText(e.target.value)}\n        />\n        <ul className=\"chat-list\">\n          {filteredChats.map((chat) => {\n            const date = new Date(chat.latestMessageTimestamp);\n            return (\n              <li\n                key={chat.id}\n                className={`chat-item ${\n                  selectedChatId === chat.id ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleSelectChat(chat.id)}\n              >\n                <div className=\"chat-info\">\n                  <img src={chat.imageURL} alt={chat.title} />\n                  <div className=\"chat-details\">\n                    <div className=\"chat-title\">{chat.title}</div>\n                    <div className=\"order-id\">Order ID: {chat.orderId}</div>\n                    <div className=\"last-message-date\">\n                      Date: {date.toLocaleDateString()}\n                    </div>\n                  </div>\n                  <div className=\"border\" />\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"right-pane\">\n        {selectedChatId && (\n          <div className=\"chat-box\">\n            {chatList\n              .find((chat) => chat.id === selectedChatId)\n              ?.messageList.map((message, index) => (\n                <div\n                  key={index}\n                  className={`message ${\n                    message.sender === \"USER\" ? \"user-message\" : \"bot-message\"\n                  }`}\n                >\n                  {message.message}\n                </div>\n              ))}\n            <div className=\"chat-input-container\">\n              <input\n                type=\"text\"\n                placeholder=\"Type a message...\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                onKeyDown={handleKeyDown}\n              />\n              <button onClick={handleSendMessage}>Send</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}