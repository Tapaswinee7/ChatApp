{"ast":null,"code":"var _jsxFileName = \"/Users/tapaswineesethy/Desktop/Tapaswinee/ChatApp/chat-app/src/chatApp/ChatList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ChatList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatList = ({\n  chats,\n  onSelectChat\n}) => {\n  _s();\n  var _messages$find;\n  const [filterText, setFilterText] = useState(\"\");\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const handleSelectChat = chatId => {\n    console.log(\"chatId\", chatId);\n    setSelectedChatId(chatId);\n    onSelectChat(chatId); // Pass the selected chat ID to the parent component\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault(); // Prevents default form submission behavior\n      handleSendMessage();\n    }\n  };\n  const handleSendMessage = () => {\n    if (message.trim() !== \"\") {\n      const updatedChats = chats.map(chat => {\n        if (chat.id === selectedChatId) {\n          return {\n            ...chat,\n            messageList: [...chat.messageList, {\n              sender: \"USER\",\n              text: message.trim()\n            }]\n          };\n        }\n        return chat;\n      });\n      setMe(updatedChats); // Update the state of `chats` with the new array\n      setMessage(\"\"); // Clear the message input after sending\n    }\n  };\n  const filteredChats = chats.filter(chat => {\n    const titleMatch = chat.title.toLowerCase().includes(filterText.toLowerCase());\n    const orderIdMatch = chat.orderId.toLowerCase().includes(filterText.toLowerCase());\n    return titleMatch || orderIdMatch;\n  });\n  console.log(\"selectedChatId\", selectedChatId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-pane\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Filter by Chat Title / Order ID\",\n        value: filterText,\n        onChange: e => setFilterText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chat-list\",\n        children: filteredChats.map((chat, index) => {\n          const date = new Date(chat.latestMessageTimestamp);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `chat-item ${selectedChatId === chat.id ? \"selected\" : \"\"}`,\n            onClick: () => handleSelectChat(chat.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: chat.imageURL,\n                alt: chat.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat-title\",\n                  children: chat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"order-id\",\n                  children: [\"Order ID: \", chat.orderId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"last-message-date\",\n                  children: [\"Date: \", date.toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), index !== filteredChats.length - 1 && /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 56\n            }, this)]\n          }, chat.chatId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-pane\",\n      children: selectedChatId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-list\",\n          children: (_messages$find = messages.find(chat => chat.id === selectedChatId)) === null || _messages$find === void 0 ? void 0 : _messages$find.messageList.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender === \"USER\" ? \"user-message\" : \"bot-message\"}`,\n            children: [console.log(message.message), message.message]\n          }, message.message, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatList, \"s3OD94n7VVjgCLXU6KI/IoCn9Wc=\");\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatList","chats","onSelectChat","_s","_messages$find","filterText","setFilterText","selectedChatId","setSelectedChatId","message","setMessage","messages","setMessages","handleSelectChat","chatId","console","log","handleKeyDown","e","key","preventDefault","handleSendMessage","trim","updatedChats","map","chat","id","messageList","sender","text","setMe","filteredChats","filter","titleMatch","title","toLowerCase","includes","orderIdMatch","orderId","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","index","date","Date","latestMessageTimestamp","onClick","src","imageURL","alt","toLocaleDateString","length","find","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/tapaswineesethy/Desktop/Tapaswinee/ChatApp/chat-app/src/chatApp/ChatList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ChatList.css\";\n\nconst ChatList = ({ chats, onSelectChat }) => {\n  const [filterText, setFilterText] = useState(\"\");\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const handleSelectChat = (chatId) => {\n    console.log(\"chatId\", chatId);\n    setSelectedChatId(chatId);\n    onSelectChat(chatId); // Pass the selected chat ID to the parent component\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault(); // Prevents default form submission behavior\n      handleSendMessage();\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (message.trim() !== \"\") {\n      const updatedChats = chats.map((chat) => {\n        if (chat.id === selectedChatId) {\n          return {\n            ...chat,\n            messageList: [\n              ...chat.messageList,\n              { sender: \"USER\", text: message.trim() },\n            ],\n          };\n        }\n        return chat;\n      });\n      setMe(updatedChats); // Update the state of `chats` with the new array\n      setMessage(\"\"); // Clear the message input after sending\n    }\n  };\n\n  const filteredChats = chats.filter((chat) => {\n    const titleMatch = chat.title\n      .toLowerCase()\n      .includes(filterText.toLowerCase());\n    const orderIdMatch = chat.orderId\n      .toLowerCase()\n      .includes(filterText.toLowerCase());\n    return titleMatch || orderIdMatch;\n  });\n  console.log(\"selectedChatId\", selectedChatId);\n  return (\n    <div className=\"chat-container\">\n      <div className=\"left-pane\">\n        <input\n          type=\"text\"\n          placeholder=\"Filter by Chat Title / Order ID\"\n          value={filterText}\n          onChange={(e) => setFilterText(e.target.value)}\n        />\n        <ul className=\"chat-list\">\n          {filteredChats.map((chat, index) => {\n            const date = new Date(chat.latestMessageTimestamp);\n            return (\n              <li\n                key={chat.chatId}\n                className={`chat-item ${\n                  selectedChatId === chat.id ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleSelectChat(chat.id)}\n              >\n                <div className=\"chat-info\">\n                  <img src={chat.imageURL} alt={chat.title} />\n                  <div className=\"chat-details\">\n                    <div className=\"chat-title\">{chat.title}</div>\n                    <div className=\"order-id\">Order ID: {chat.orderId}</div>\n                    <div className=\"last-message-date\">\n                      Date: {date.toLocaleDateString()}\n                    </div>\n                  </div>\n                  <div className=\"border\" />\n                </div>\n                {index !== filteredChats.length - 1 && <hr />}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"right-pane\">\n        {selectedChatId && (\n          <div className=\"chat-box\">\n            <div className=\"message-list\">\n              {messages\n                .find((chat) => chat.id === selectedChatId)\n                ?.messageList.map((message, index) => (\n                  <div\n                    key={message.message}\n                    className={`message ${\n                      message.sender === \"USER\" ? \"user-message\" : \"bot-message\"\n                    }`}\n                  >\n                    {console.log(message.message)}\n                    {message.message}\n                  </div>\n                ))}\n            </div>\n            <div className=\"chat-input-container\">\n              <input\n                type=\"text\"\n                placeholder=\"Type a message...\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                onKeyDown={handleKeyDown}\n              />\n              <button onClick={handleSendMessage}>Send</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}